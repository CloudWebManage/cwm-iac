name: "Deploy"
description: "Update values in relevant repo to trigger deployment by ArgoCD (or other CD tools)"
inputs:
  deploy_repo_org:
    required: false
    description: 'Github org of the repo to deploy to'
    default: 'CloudWebManage'
  deploy_repo_name:
    required: false
    description: 'Name of the repo to deploy to'
    default: 'cwm-worker-cluster'
  deploy_key_b64:
    required: true
    description: 'Base64 encoded deploy key with write access to the target repo'
  content:
    required: true
    description: 'Content to write to the values file'
  file_path:
    required: true
    description: 'Path to the file to write the content to'
  git_user_name:
    required: false
    description: 'Git user name for the commit'
    default: 'GitHub Actions'
  git_user_email:
    required: false
    description: 'Git user email for the commit'
    default: 'actions@localhost'
  commit_message:
    required: true
    description: 'Commit message'
runs:
  using: composite
  steps:
    - name: deploy
      shell: bash
      env:
        CONTENT: ${{ inputs.content }}
        COMMIT_MESSAGE: ${{ inputs.commit_message }}
      run: |
        echo "${{ inputs.deploy_key_b64 }}" | base64 -d > /tmp/deploy_key
        chmod 600 /tmp/deploy_key
        export GIT_SSH_COMMAND="ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        git config --global user.name "${{ inputs.git_user_name }}"
        git config --global user.email "${{ inputs.git_user_email }}"
        git clone "git@github.com:${{ inputs.deploy_repo_org }}/${{ inputs.deploy_repo_name }}.git"
        cd "${{ inputs.deploy_repo_name }}"
        echo "${CONTENT}" > "${{ inputs.file_path }}"
        git add "${{ inputs.file_path }}"
        git commit -m "${COMMIT_MESSAGE}"
        git push origin main

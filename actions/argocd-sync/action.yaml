name: "ArgoCD Sync"
description: "Sync ArgoCD Apps"
inputs:
  clusters_match:
    required: false
    default: "all"
    description: 'Match condition to get cluster names'
  deploy_key_b64:
    required: true
    description: 'Base64 encoded deploy key with read access to cwm-worker-cluster'
  VAULT_URL:
    required: true
    description: VAULT_URL
  VAULT_CA_B64:
    required: true
    description: VAULT_CA_B64
  VAULT_ROLE_ID:
    required: true
    description: VAULT_ROLE_ID
  VAULT_SECRET_ID:
    required: true
    description: VAULT_SECRET_ID
runs:
  using: composite
  steps:
    - name: sync
      uses: CloudWebManage/cwm-iac/actions/clusters-env@main
      with:
        deploy_key_b64: ${{ inputs.deploy_key_b64 }}
        VAULT_CA_B64: ${{ inputs.VAULT_CA_B64 }}
        VAULT_URL: ${{ inputs.VAULT_URL }}
        VAULT_ROLE_ID: ${{ inputs.VAULT_ROLE_ID }}
        VAULT_SECRET_ID: ${{ inputs.VAULT_SECRET_ID }}
        script: |
          for cluster_name in $(get_cluster_names '${{ inputs.clusters_match }}'); do
            (
              echo "Syncing cluster: $cluster_name"
              kubeconfig=$(get_cluster_kubeconfig "$cluster_name")
              for app_name in $(kubectl --kubeconfig=$kubeconfig -n argocd get application -oname); do
                echo "Syncing app $cluster_name / $app_name"
                kubectl --kubeconfig=$kubeconfig -n argocd patch "$app_name" -p '{"operation": {"initiatedBy": {"username": "github-actions"}, "sync": {"syncStrategy": {"hook": {}}}}}' --type=merge
              done
            ) & sleep 1
            wait
            echo OK
          done

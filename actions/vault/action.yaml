name: "Vault"
description: "Run script using Vault CLI"
inputs:
  script:
    required: true
    description: 'Vault CLI script to run, you can use "vault_kv_get <path>" to get secrets as json'
  VAULT_URL:
    required: true
    description: VAULT_URL
  VAULT_CA_B64:
    required: true
    description: VAULT_CA_B64
  VAULT_ROLE_ID:
    required: true
    description: VAULT_ROLE_ID
  VAULT_SECRET_ID:
    required: true
    description: VAULT_SECRET_ID
runs:
  using: composite
  steps:
    - name: download vault
      shell: bash
      env:
        VAULT_VERSION: "1.20.0"
      run: |
        curl -s -L -o vault.zip "https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip"
        unzip vault.zip
        mv vault /usr/local/bin/vault
        chmod +x /usr/local/bin/vault
    - name: run script
      shell: bash
      env:
        SCRIPT: ${{ inputs.script }}
        VAULT_ADDR: ${{ inputs.VAULT_URL }}
        VAULT_CA_B64: ${{ inputs.VAULT_CA_B64 }}
        VAULT_ROLE_ID: ${{ inputs.VAULT_ROLE_ID }}
        VAULT_SECRET_ID: ${{ inputs.VAULT_SECRET_ID }}
        VAULT_FORMAT: "json"
      run: |
        ca=$(mktemp)
        trap 'rm -f "$ca"' EXIT
        echo "${VAULT_CA_B64}" | base64 -d > "$ca"
        export VAULT_CACERT="$ca"
        export VAULT_TOKEN="$(vault write auth/approle/login role_id="$VAULT_ROLE_ID" secret_id="$VAULT_SECRET_ID" | jq -r .auth.client_token)"
        export vault_kv_get='vault kv get -mount=kvv2 -field=data'
        eval "${SCRIPT}"

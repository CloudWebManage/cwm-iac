name: "Cluster Env"
description: "Run script within cluster environment with credentials and access to relevant tools"
inputs:
  script:
    required: true
    description: 'Bash script to run within the environment'
  deploy_key_b64:
    required: true
    description: 'Base64 encoded deploy key with read access to cwm-worker-cluster'
  VAULT_URL:
    required: true
    description: VAULT_URL
  VAULT_CA_B64:
    required: true
    description: VAULT_CA_B64
  VAULT_ROLE_ID:
    required: true
    description: VAULT_ROLE_ID
  VAULT_SECRET_ID:
    required: true
    description: VAULT_SECRET_ID
runs:
  using: composite
  steps:
    - name: clone cwm-worker-cluster
      shell: bash
      run: |
        echo "${{ inputs.deploy_key_b64 }}" | base64 -d > /tmp/deploy_key
        chmod 600 /tmp/deploy_key
        export GIT_SSH_COMMAND="ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
        git config --global user.name "github actions"
        git config --global user.email "actions@localhost"
        git clone "git@github.com:CloudWebManage/cwm-worker-cluster.git"
    - name: download tools
      shell: bash
      run: |
        cd cwm-worker-cluster
        DOWNLOAD_TOOLS_GLOBAL=yes DOWNLOAD_TOOLS_ONLY="vault,kubectl" sudo -E python3 bin/terraform/download_tools.py cwmc-eu-objstoretest
    - name: run script
      shell: bash
      env:
        SCRIPT: ${{ inputs.script }}
        VAULT_ADDR: ${{ inputs.VAULT_URL }}
        VAULT_CA_B64: ${{ inputs.VAULT_CA_B64 }}
        VAULT_ROLE_ID: ${{ inputs.VAULT_ROLE_ID }}
        VAULT_SECRET_ID: ${{ inputs.VAULT_SECRET_ID }}
        VAULT_FORMAT: "json"
      run: |
        set -euo pipefail
        
        ca=$(mktemp)
        echo "${VAULT_CA_B64}" | base64 -d > "$ca"
        export VAULT_CACERT="$ca"
        export VAULT_TOKEN="$(vault write auth/approle/login role_id="$VAULT_ROLE_ID" secret_id="$VAULT_SECRET_ID" | jq -r .auth.client_token)"
        
        function vault_kv_get() {
          local vault_path="$1"
          vault kv get -mount=kvv2 -field=data "$vault_path"
        }
        
        function get_cluster_names() {
          local cluster_name_match="$1"
          python3 cwm-worker-cluster/bin/get_cluster_names.py "$cluster_name_match"
        }
        
        function get_cluster_kubeconfig() {
          local cluster_name="$1"
          local k8s_token="$(vault write -force k8s-${cluster_name}/creds/github-actions | jq .data.service_account_token)"
          local kubeconfig=$(mktemp)
          vault_kv_get cwm-worker-cluster/${cluster_name}/cluster_k8s_apps/kubeconfig-template | jq -r .kubeconfig > "$kubeconfig"
          sed -i "s|__K8S_TOKEN__|${k8s_token}|g" "$kubeconfig"
          echo "$kubeconfig"
        }
        
        eval "${SCRIPT}"

server {
    listen       80;
    server_name  _;
    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }
}

lua_shared_dict prometheus_metrics 16m;

init_worker_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")
    metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
    metric_response_size = prometheus:histogram(
        "nginx_http_response_size_bytes", "HTTP response size", {"host"},
        { 128, 512, 1024, 4096, 16384, 65536, 262144, 1048576, 4194304, 16777216 }
    )
    metric_request_size = prometheus:histogram(
        "nginx_http_request_size_bytes", "HTTP request size", {"host"},
        { 128, 512, 1024, 4096, 16384, 65536, 262144, 1048576, 4194304, 16777216 }
    )
}

log_by_lua_block {
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    metric_response_size:observe(tonumber(ngx.var.bytes_sent), {ngx.var.server_name})
    metric_request_size:observe(tonumber(ngx.var.request_length), {ngx.var.server_name})
}

server {
    listen 9999;
    server_name  _;
    location /metrics {
        content_by_lua_block {
            prometheus:collect()
        }
    }
}
